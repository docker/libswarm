syntax = "proto3";

package api;

import "types.proto";

// NOTE(stevvooe): Make sure your gopath is appropriately set for this to work
// correctly.
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// Cluster defines the RPC methods for controlling a cluster.
//
// Other options for naming this interface:
//
// 	- "Control", since this controls a swarm cluster
// 	- "User" because it is user facing.
service Cluster {
	rpc GetNode(GetNodeRequest) returns (GetNodeResponse) {}
	rpc ListNodes(ListNodesRequest) returns (ListNodesResponse) {}
	rpc UpdateNode(UpdateNodeRequest) returns (UpdateNodeResponse) {}

	rpc GetTask(GetTaskRequest) returns (GetTaskResponse) {}
	rpc ListTasks(ListTasksRequest) returns (ListTasksResponse) {}
	rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {}
	rpc RemoveTask(RemoveTaskRequest) returns (RemoveTaskResponse) {}

	rpc GetJob(GetJobRequest) returns (GetJobResponse) {}
	rpc ListJobs(ListJobsRequest) returns (ListJobsResponse) {}
	rpc CreateJob(CreateJobRequest) returns (CreateJobResponse) {}
	rpc UpdateJob(UpdateJobRequest) returns (UpdateJobResponse) {}
	rpc RemoveJob(RemoveJobRequest) returns (RemoveJobResponse) {}

	rpc GetNetwork(GetNetworkRequest) returns (GetNetworkResponse) {};
	rpc ListNetworks(ListNetworksRequest) returns (ListNetworksResponse) {};
	rpc CreateNetwork(CreateNetworkRequest) returns (CreateNetworkResponse) {};
	rpc RemoveNetwork(RemoveNetworkRequest) returns (RemoveNetworkResponse) {};
}

message ListOptions {
	string prefix = 1;
}

message GetNodeRequest {
	string node_id = 1 [(gogoproto.customname) = "NodeID"];
}

message GetNodeResponse {
	Node node = 1;
}

message ListNodesRequest {
	ListOptions options = 1;
}

message ListNodesResponse {
	repeated Node nodes = 1;
}

// UpdateNodeRequest requests an update to the specified node. This may be used
// to request a new availability for a node, such as PAUSE. Invalid updates
// will be denied and cause an error.
message UpdateNodeRequest {
	string node_id = 1 [(gogoproto.customname) = "NodeID"];
	NodeSpec spec = 2;
}

message UpdateNodeResponse {
	Node node = 1;
}

message CreateTaskRequest {
	JobSpec spec = 1;
}

message CreateTaskResponse {
	Task task = 1;
}

message GetTaskRequest {
	string task_id = 1 [(gogoproto.customname) = "TaskID"];
}

message GetTaskResponse {
	Task task = 1;
}

message RemoveTaskRequest {
	string task_id = 1 [(gogoproto.customname) = "TaskID"];
}

message RemoveTaskResponse {
}

message ListTasksRequest {
}

message ListTasksResponse {
	repeated Task tasks = 1;
}

message CreateJobRequest {
	JobSpec spec = 1;
}

message CreateJobResponse {
	Job job = 1;
}

message GetJobRequest {
	string job_id = 1 [(gogoproto.customname) = "JobID"];
}

message GetJobResponse {
	Job job = 1;
}

message UpdateJobRequest {
	string job_id = 1 [(gogoproto.customname) = "JobID"];
	JobSpec spec = 2;
}

message UpdateJobResponse {
	Job job = 1;
}

message RemoveJobRequest {
	string job_id = 1 [(gogoproto.customname) = "JobID"];
}

message RemoveJobResponse {
}

message ListJobsRequest {
	ListOptions options = 1;
}

message ListJobsResponse {
	repeated Job jobs = 1;
}

message CreateNetworkRequest {
	NetworkSpec spec = 1;
}

message CreateNetworkResponse {
	Network network = 1;
}

message GetNetworkRequest {
	string name = 1;
	string network_id = 2 [(gogoproto.customname) = "NetworkID"];
}

message GetNetworkResponse {
	Network network = 1;
}

message RemoveNetworkRequest {
	string name = 1;
	string network_id = 2 [(gogoproto.customname) = "NetworkID"];
}

message RemoveNetworkResponse {}

message ListNetworksRequest {}

message ListNetworksResponse {
	repeated Network networks = 1;
}
