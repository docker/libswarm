syntax = "proto3";

package pb;

import "gogoproto/gogo.proto";

import "github.com/docker/swarm-v2/api/types.proto";
import "github.com/docker/swarm-v2/api/manager.proto";

// StoreSnapshot is used to store snapshots of the store.
message StoreSnapshot {
	// TODO(aaronl): The current method of assembling a StoreSnapshot
	// structure and marshalling it is not optimal. It may be better to
	// write out nodes, networks, tasks, etc. one at a time to an io.Writer
	// using gogo-protobuf's io.DelimitedWriter. A new value of the version
	// field could support this approach.

	repeated docker.cluster.api.Namespace namespaces = 1;
	repeated docker.cluster.api.Node nodes = 2;
	repeated docker.cluster.api.Job jobs = 3;
	repeated docker.cluster.api.Network networks = 4;
	repeated docker.cluster.api.Task tasks = 5;
	repeated docker.cluster.api.Volume volumes = 6;

}

// ClusterSnapshot stores cluster membership information in snapshots.
message ClusterSnapshot {
	repeated docker.cluster.api.RaftNode members = 1;
	repeated uint64 removed = 2;
}

message Snapshot {
	enum Version {
		// V0 is the initial version of the StoreSnapshot message.
		V0 = 0;
	}

	Version version = 1;

	ClusterSnapshot membership = 2 [(gogoproto.nullable) = false];
	StoreSnapshot store = 3 [(gogoproto.nullable) = false];
}
